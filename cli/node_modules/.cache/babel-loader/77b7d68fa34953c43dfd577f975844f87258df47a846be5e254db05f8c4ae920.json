{"ast":null,"code":"var _jsxFileName = \"/Users/emmanueldev/Documents/1-dev-perso/blog_mern/cli/src/Components/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function register(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    // console.log(response);\n    if (response.status === 200) {\n      // alert('Enregistrement réussi');\n      setRedirect(true);\n    } else {\n      alert('Enregistrement interrompu');\n    }\n    if (redirect) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: '/'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    } else {\n      alert('Enregistrement non effectué');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    className: \"register\",\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"akJCtea06E3X9APQvCKcOXGIZ6s=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","Navigate","RegisterPage","username","setUsername","password","setPassword","redirect","setRedirect","register","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","target","value"],"sources":["/Users/emmanueldev/Documents/1-dev-perso/blog_mern/cli/src/Components/pages/RegisterPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function RegisterPage() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    async function register(e) {\n        e.preventDefault();\n        const response = await fetch('http://localhost:4000/register', {\n            method: 'POST',\n            body: JSON.stringify({username, password}),\n            headers: {'Content-Type':'application/json'},\n        })\n        // console.log(response);\n        if(response.status === 200) {\n            // alert('Enregistrement réussi');\n            setRedirect(true);\n        } else {\n            alert('Enregistrement interrompu')\n        }\n\n        if(redirect){\n            return <Navigate to={'/'}/>\n        } else {\n            alert('Enregistrement non effectué');\n        }\n    }\n\n    return (\n        <form action=\"\" className=\"register\" onSubmit={register}>\n            <h1>Register</h1>\n            <input type=\"text\" \n                placeholder=\"username\" \n                value={username}\n                onChange={e => setUsername(e.target.value)}/>\n\n            <input type=\"password\" \n                placeholder=\"password\" \n                value={password}\n                onChange={e => setPassword(e.target.value)}/>\n            <button>Register</button>\n        </form>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAE5C,eAAe,SAASC,YAAY,GAAG;EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/C,eAAeS,QAAQ,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACd,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1Ca,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB;IAC/C,CAAC,CAAC;IACF;IACA,IAAGN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;MACxB;MACAX,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACHY,KAAK,CAAC,2BAA2B,CAAC;IACtC;IAEA,IAAGb,QAAQ,EAAC;MACR,oBAAO,QAAC,QAAQ;QAAC,EAAE,EAAE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE;IAC/B,CAAC,MAAM;MACHa,KAAK,CAAC,6BAA6B,CAAC;IACxC;EACJ;EAEA,oBACI;IAAM,MAAM,EAAC,EAAE;IAAC,SAAS,EAAC,UAAU;IAAC,QAAQ,EAAEX,QAAS;IAAA,wBACpD;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB;MAAO,IAAI,EAAC,MAAM;MACd,WAAW,EAAC,UAAU;MACtB,KAAK,EAAEN,QAAS;MAChB,QAAQ,EAAEO,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACW,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eAEjD;MAAO,IAAI,EAAC,UAAU;MAClB,WAAW,EAAC,UAAU;MACtB,KAAK,EAAEjB,QAAS;MAChB,QAAQ,EAAEK,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACW,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACjD;MAAA,UAAQ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACtB;AAEf;AAAC,GA1CuBpB,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}